(defun main ()
  (let ((n (make-array 3 :initial-contents '(0 0 0))))
  (let ((r (make-array 3 :initial-contents '(1 1 1))))
  (let ((i 0))
  (loop
    (let ((a (read nil nil)))
    (if (eql a NIL)(return n))
      (setf (aref n i) a)
      (setq i (+ i 1))))
  (dotimes (x 3)
    (dotimes (y 3)
      (if (< (aref n x) (aref n y))
        (setf (aref r x) (+ (aref r x) 1)))))
  (write (aref r 0))
  (fresh-line)
  (write (aref r 1))
  (fresh-line)
  (write (aref r 2))
  (fresh-line)))))
(main)
